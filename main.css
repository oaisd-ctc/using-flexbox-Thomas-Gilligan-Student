.container {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row-reverse;
    background-color: cornflowerblue;
    text-align: center;
    justify-content: flex-end;
    align-items: center;
    height: 350px;
}

.item {
    background-color: white;
    color: #000;
    width: 100px;
    height: 100px;
    margin: 10px;
}

.container2 {
    width: 100%;
    height: 400px;
    background-color: gray;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}

.item2 {
    height: 200px;
    width: 200px;
    background-color: pink;
}

nav {
    border-bottom: 2px solid blueviolet;
    text-align: center;
    margin: 10px;
    margin-left: 0;
    width: 100%;
    height: 20px;
    padding-left: 0;
}

nav a {
    list-style-type: none;
    padding-left: 0;
    display: inline-block;
}

/* The hover pseudo-class allows for any element's property to be changed while the user's mouse cursor is over top of it. */
nav a:hover {
    color:blueviolet;
    font-weight: bold;
}

/* The :nth-child(n) pseudo-class selects every element that is the n child of its parent, in this case using the word "odd" to select every odd list item. */
.odd-pseudo li:nth-child(odd) {
    background-color: lightyellow;
}

/* The hover pseudo-class allows for any element's property to be changed while the user's mouse cursor is over top of it. */
.item:hover{
    background-color: lightblue;
    flex: 50%;
    color: white;
    transition-property: all;
    transition-duration: 200ms;
}

/* The focus pseudo-class allows for an input element's property to be changed while the user has it selected.  */
.item2:focus {
    background-color: magenta;
    transition-property: all;
    transition-duration: 2s;
    width: 75%;
    height: 75%;
}

header {
    position: fixed;
    color: darkred;
    font-style: italic;
}

/* The :not(selector) pseudo-class applies the included declarations to any element that is not using that selector. (fairly self-explanatory) */
:not(header){
    color: black;
}